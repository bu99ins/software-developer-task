{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA0C;;;AAwBnC,MAAM,YAAY;IACxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,UAAK,GAAG,iBAAiB,CAAC;QAC1B,iBAAY,GAAS,IAAI,CAAC;IAHa,CAAC;IAKxC,eAAe,CAAC,KAAe;QAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACP,MAAM,QAAQ,GAAG,mBAAmB,CAAC;QACrC,MAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QAC1C,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI;aACP,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,oCAAoC;aAC7D,SAAS,CAAC,IAAI,CAAC,EAAE;YAClB,kCAAkC;QACnC,CAAC,EAAE,KAAK,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACJ,CAAC;;wEArBW,YAAY;4FAAZ,YAAY;QAlBb,yEACV;QAAA,qEACC;QAAA,uDACD;QAAA,4DAAK;QACN,4DAAM;QACN,yEACC;QAAA,2EACC;QAAA,yEACD;QAAA,4DAAQ;QAER,8EACA;QAD2C,2IAAU,wCAAoC,IAAC;QAA1F,4DACA;QAAA,4EACC;QADkF,oIAAS,cAAU,IAAC;QACtG,uEAA0B;QAAA,gEAAI;QAAA,4DAAI;QACnC,4DAAS;QACV,4DAAM;;QAZJ,0DACD;QADC,iGACD;QAQmD,0DAA+B;QAA/B,8FAA+B;;6FAOvE,YAAY;cApBxB,uDAAS;eAAC;gBACV,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE;;;;;;;;;;;;;;;EAeT;gBACD,MAAM,EAAE,EAAE;aACV;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AAET;;AAaxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,qEAAgB;SACjB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,qEAAgB;6FAKP,SAAS;cAXrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Component({\n\tselector: 'app-root',\n\ttemplate: `<div style=\"text-align:center\" class=\"content\">\n\t\t<h1>\n\t\t\tWelcome to {{title}}!\n\t\t</h1>\n\t</div>\n\t<div class=\"file-upload\">\n\t\t<label for=\"file-input\">\n\t\t\tSelect files\n\t\t</label>\n\n\t\t<input id=\"file-input\" #MyFile type=\"file\" (change)=\"handleFileInput($event.target.files)\" />\n\t\t<button type=\"button\" class=\"btn-large btn-submit\" [disabled]=\"fileToUpload==null\" (click)=\"onSubmit()\">\n\t\t\t<i class=\"material-icons\">save</i>\n\t\t</button>\n\t</div>\n\t`,\n\tstyles: []\n})\nexport class AppComponent {\n\tconstructor(private http: HttpClient) {}\n\n\ttitle = 'SalesReport-SPA';\n\tfileToUpload: File = null;\n\n\thandleFileInput(files: FileList) {\n\t\tthis.fileToUpload = files.item(0);\n\t}\n\n\tonSubmit() {\n\t\tconst endpoint = '/api/salesrecords';\n\t\tconst formData: FormData = new FormData();\n\t\tformData.append('fileKey', this.fileToUpload, this.fileToUpload.name);\n\t\tthis.http\n\t\t\t.post(endpoint, formData) // , { headers: yourHeadersConfig })\n\t\t\t.subscribe(data => {\n\t\t\t// do something, if upload success\n\t\t}, error => {\n\t\t\tconsole.log(error);\n\t\t});\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}